name: Build and Release APK

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential \
            python3-dev \
            python3-pip \
            git \
            zip \
            unzip \
            default-jdk \
            zlib1g-dev \
            libncurses5-dev \
            libstdc++6 \
            libffi-dev \
            libssl-dev \
            libsqlite3-dev \
            wget

      - name: Install Buildozer (user)
        run: |
          python3 -m pip install --user buildozer cython
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Set up Android SDK/NDK (fixed)
        run: |
          set -euo pipefail

          # download commandline tools
          mkdir -p "$HOME/Android/cmdline-tools"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d "$HOME/Android/cmdline-tools"

          # prepare SDK root and PATH
          export ANDROID_HOME="$HOME/Android/sdk"
          mkdir -p "$ANDROID_HOME"
          SDKMANAGER="$HOME/Android/cmdline-tools/cmdline-tools/bin/sdkmanager"
          export PATH="$HOME/Android/cmdline-tools/cmdline-tools/bin:$ANDROID_HOME/platform-tools:$PATH"

          # Accept licenses non-interactively and install required packages.
          # Use the sdkmanager binary explicitly so PATH issues do not matter.
          yes | "$SDKMANAGER" --licenses || true
          # Install exact build-tools version that matches buildozer.spec
          "$SDKMANAGER" "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;25.2.9519653"

          # verify and symlink aidl where Buildozer expects it
          BUILD_TOOLS_PATH="$ANDROID_HOME/build-tools/33.0.2"
          mkdir -p "$BUILD_TOOLS_PATH"
          if [ -f "$HOME/Android/cmdline-tools/cmdline-tools/bin/aidl" ]; then
            ln -sf "$HOME/Android/cmdline-tools/cmdline-tools/bin/aidl" "$BUILD_TOOLS_PATH/aidl"
          else
            echo "ERROR: aidl binary not found after install" >&2
            ls -l "$HOME/Android/cmdline-tools/cmdline-tools/bin" || true
            exit 1
          fi

      - name: Build APK
        run: |
          export ANDROID_HOME="$HOME/Android/sdk"
          export PATH="$HOME/Android/cmdline-tools/cmdline-tools/bin:$ANDROID_HOME/platform-tools:$PATH"
          python3 -m buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: ShivAI-APK
          path: bin/*.apk
