name: Build and Release APK

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential \
            python3-dev \
            python3-pip \
            git \
            zip \
            unzip \
            default-jdk \
            zlib1g-dev \
            libncurses5-dev \
            libstdc++6 \
            libffi-dev \
            libssl-dev \
            libsqlite3-dev \
            wget

      # 3. Install Buildozer (user install) and put local bin on PATH
      - name: Install Buildozer
        run: |
          python3 -m pip install --user buildozer cython
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      # 4. Set up Android SDK/NDK and Build APK (single step so env persists)
      - name: Set up Android SDK/NDK and Build APK
        run: |
          mkdir -p $HOME/Android/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $HOME/Android/cmdline-tools
          mkdir -p $HOME/Android/sdk
          export ANDROID_HOME=$HOME/Android/sdk
          export PATH=$ANDROID_HOME/cmdline-tools/tools/bin:$ANDROID_HOME/platform-tools:$PATH

          # Accept licenses and install required SDK pieces
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;25.2.9519653"

          # Build (verbose)
          python3 -m buildozer -v android debug

      # 5. Upload APK artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: ShivAI-APK
          path: bin/*.apk
